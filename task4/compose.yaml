name: mongo-sharding-repl-cache

services:
  # Config Server
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 1 - Replica 1 (Primary)
  shard1-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-1
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 1 - Replica 2
  shard1-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - shard1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 1 - Replica 3
  shard1-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - shard1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 2 - Replica 1 (Primary)
  shard2-1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-1
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 2 - Replica 2
  shard2-2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "27023:27023"
    volumes:
      - shard2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Shard 2 - Replica 3
  shard2-3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "27024:27024"
    volumes:
      - shard2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Mongos Router
  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    depends_on:
      - configSrv
      - shard1-1
      - shard1-2
      - shard1-3
      - shard2-1
      - shard2-2
      - shard2-3
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  # Redis Cache
  redis:
    image: dh-mirror.gitverse.ru/redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      start_period: 10s

  # API Application
  pymongo_api:
    container_name: pymongo_api
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
      - redis
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"

volumes:
  redis-data:
  config-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:
